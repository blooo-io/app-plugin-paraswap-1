name: Compilation & tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:

jobs:
  job_build_release_plugin:
    name: Build release plugin
    strategy:
      matrix:
        include:
          - sdk: "$NANOS_SDK"
            name: "nanos"
          - sdk: "$NANOX_SDK"
            name: "nanox"
          - sdk: "$NANOSP_SDK"
            name: "nanosp"

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest

    steps:
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build
        run: |
          make BOLOS_SDK=${{ matrix.sdk }} -j

  job_scan_build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build with Clang Static Analyzer
        run: |
          git config --global --add safe.directory /__w/app-plugin-paraswap-1/app-plugin-paraswap-1
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

  build_plugin:
    name: Build plugin using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      upload_app_binaries_artifact: plugin_binaries
      flags: "DEBUG=1"

  build_develop_ethereum_app:
    name: Build Ethereum app using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      app_repository: LedgerHQ/app-ethereum
      app_branch_name: develop
      flags: "DEBUG=1 CAL_TEST_KEY=1"
      upload_app_binaries_artifact: ethereum_build_develop

  jobs-e2e_tests:
    needs: [build_plugin, build_develop_ethereum_app]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Debug reusable workflow outputs (if emitted)
      - name: Debug binary path
        run: |
          echo "Binary path from reusable workflow: ${{ needs.build_plugin.outputs.binary_path }}"

      # Download Plugin Binaries (with dynamic names or merged artifact)
      - name: Download Plugin Binary for NanoX
        uses: actions/download-artifact@v3
        with:
          name: plugin_binaries-nanox
          path: tests/elfs/plugin/nanox
        continue-on-error: true

      - name: Download Plugin Binary for NanoS
        uses: actions/download-artifact@v3
        with:
          name: plugin_binaries-nanos
          path: tests/elfs/plugin/nanos
        continue-on-error: true

      - name: Download Ethereum App Binaries
        uses: actions/download-artifact@v3
        with:
          name: ethereum_build_develop
          path: tests/elfs/ethereum

      # Debug artifact contents
      - name: Debug Downloaded Artifacts
        run: |
          ls -R tests/elfs/

      # Run Tests
      - name: Run Zemu Tests
        run: cd tests && yarn test
